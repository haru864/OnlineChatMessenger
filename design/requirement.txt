(1)クライアントからサーバーへのデータフォーマット

- ログインする
{
    "command":"login",
    "username":"{username}"
}

- チャットルームを作成する
{
    "command":"create",
    "roomname":"{roomname}",
    "max_num_of_participants":"{max_num_of_participants}"
}
このサービスは、チャットルームの作成中にデータが失われないように、TCP接続を使用する。
チャットルームが作成されると、作成したクライアントは自動的にUDPでチャットルームに接続され、ホストとして指定される。

- チャットルームに参加する
{
    "command":"join",
    "roomname":"{roomname}"
}
roomが存在したら、そのチャットルームに参加する。

- メッセージを送信する
{
    "command":"send",
    "roomname":"{roomname}",
    "message":"{message}",
    "size":"{message-size}"
}
roomname は参加した部屋を示す文字列、
message-size はメッセージのサイズ、
message はチャットに参加した全ての人に送信するメッセージを表す。
メッセージの送信時に、送信者がサーバ内のチャットルームに参加していることを確認する。

- チャットルームの一覧を取得する
{
    "command":"list"
}

- 接続を終了する
{
    "command":"logout"
}


(2)サーバーからクライアントへのデータフォーマット
{
    "status":[0|1],
    "message":"{message}"

}
statusはコマンドの実行結果を示す。0なら正常終了、1なら異常終了。
messageはクライアントへのメッセージが設定される。
正常終了ならクライアントのターミナルに表示する文字列、異常終了ならエラーメッセージが設定される。

